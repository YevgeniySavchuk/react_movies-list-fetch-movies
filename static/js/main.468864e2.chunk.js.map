{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","BASE_URL","getMovie","query","a","fetch","request","ok","Error","status","json","FindMovie","isMovieInTheList","addMovie","useState","setQuery","setMovie","errorMessage","setErrorMessage","findMovie","useCallback","trim","Response","addMovieToTheList","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","length","value","onChange","target","onClick","App","setMovies","some","el","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.468864e2.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const apiKey = '795f52a1';\n\nconst BASE_URL = `https://www.omdbapi.com/?apikey=${apiKey}&t=`;\n\nexport const getMovie = async (query: string) => {\n  const request = await fetch(`${BASE_URL}${query}`);\n\n  if (!request.ok) {\n    throw new Error(`Status of error: ${request.status}`);\n  }\n\n  return request.json();\n};\n","import React, { ChangeEvent, useCallback, useState } from 'react';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  isMovieInTheList: (movie: Movie) => boolean;\n  addMovie: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ isMovieInTheList, addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const findMovie = useCallback(async () => {\n    if (!query.trim()) {\n      setErrorMessage('Enter search text');\n\n      return;\n    }\n\n    setErrorMessage('');\n    const request = await getMovie(query);\n\n    if (request.Response === 'True') {\n      setMovie(request);\n      setErrorMessage('');\n    } else {\n      setErrorMessage('Can\\t find a movie with such title');\n    }\n  }, [errorMessage, query]);\n\n  const addMovieToTheList = useCallback(() => {\n    if (!movie) {\n      setErrorMessage('Select a movie first');\n\n      return;\n    }\n\n    if (isMovieInTheList(movie)) {\n      setErrorMessage('This movie already is in the list');\n    } else {\n      addMovie(movie);\n      setQuery('');\n      setMovie(null);\n    }\n  }, [movie]);\n\n  const inputHandler = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setQuery(target.value);\n    setErrorMessage('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={(event) => event.preventDefault()}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${errorMessage.length && 'is-danger'}`}\n              value={query}\n              onChange={inputHandler}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            {errorMessage}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              data-cy=\"find\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              data-cy=\"add\"\n              onClick={addMovieToTheList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const isMovieInTheList = useCallback((movie: Movie) => {\n    return movies.some(el => el.imdbID === movie.imdbID);\n  }, [movies]);\n\n  const addMovie = useCallback((movie: Movie) => {\n    setMovies([...movies, movie]);\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          isMovieInTheList={isMovieInTheList}\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}